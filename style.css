/* Selector global*/
* {
  box-sizing: content-box;
}
body,
html {
  padding: 0;
  margin: 0;
}
body {
  background-color: rgb(204, 204, 230);
  color: rgb(0, 0, 0);
}
.myli {
  background-color: bisque;
  color: rgb(117, 221, 56);
}
header {
  background-color: aqua;
  color: rgb(169, 3, 175);
}
.content-content-box > div {
  background-color: green;
  width: 300px;
  margin: 30px;
  border: 10px solid black;
}
#article-1 {
  background-color: aquamarine;
}
#myp {
  color: rgb(255, 251, 0);
}
.myp {
  font-size: 24px;
}
.back {
  background-color: brown;
}
.color-rojo-back-azul {
  color: red;
  background-color: blue;
}
/*  MODELO DE CAJA*/
.contenedor {
  margin: 50px;
  background-color: violet;
  padding: 10px;
  border: 5px solid red;
  color: green;
}
.contenido {
  background-color: aquamarine;
}
.contenedor-con-imagen {
  width: 200px;
  height: 200px;
  padding: 20px;
  background-color: aqua;
  background-image: url("OIP.jpg");
  background-size: cover;
  background-position: center;
  text-align: center;
}
.conetenido-con-imagen {
  background-color: white;
}
/* selectores*/
/* selector por elemento */
span {
  font-weight: bold;
}
/*  asignan los mismos estilños a elementos con nombres diferentes, esta regla afecta a todos los elemntos p y span*/
p,
span {
  color: violet;
}
/* afecta a los elementos p que se encuentran dentro del elemento main, ya sea contenido directo o indirecto*/
main p {
  background-color: aquamarine;
}
.contenedor-parrafo > p {
  font-size: 25px;
}
/* este selector hace referencia a elementos que estan precedidos por otros elementos, ambos deben estar al mismo nivel*/
h1 + p {
  color: red;
}
/* estilos mas usados*/
/* declara el tipo de letra que se usa para mostrar en un texto. se pueden declarar multiples valores separados por coma para ofrecer al navegador alternativas en caso de que alguna no se encuentre disponible*/
.container {
  border-top: 1px solid black;
  padding: 20px;
  font-family: Georgia, "Times New Roman", Times, serif;
}
.container > .content > p {
  background-color: white;
  color: black;
  font-size: 25px; /*determina el tamaño de la fuente; puede estar incluido en pixeles(px), centimetros(cm), en porcentajes (%), o puntos (pt)*/
  font-weight: 100; /*bold (100-1000) */
  font-style: oblique; /* normal, italic, oblique*/
}
.content > h3 {
  background-color: bisque;
  font: bold 30px Arial, Helvetica, sans-serif; /* permite declarar varios atributos al mismo tiempo, separados por espacios. 1° grosor, 2° tamaño, 3° familia de fuente*/
  text-align: center; /* left, right, center, justify*/
  line-height: 50px; /*espacio entre lineas*/
}

/* colores */
.mydiv {
  height: 100px;
  width: 100px;
  border: 1px solid black;
  padding: 20px;
  background-color: rgb(169, 3, 175);
}
.div-in-mydiv {
  height: 50px;
  width: 50px;
  border: 1px solid black;
  padding: 20px;
  background-color: rgba(255, 255, 255, 0.5);
}
.div-in-mydiv-2 {
  height: 50px;
  width: 50px;
  border: 1px solid black;
  background-color: #007fff; /* 0 - 9 y A - F*/
}
.content {
  font-size: 30px;
}
/* tamaños*/
.div-in-mydiv-3 {
  height: 50px;
  width: 50px;
  margin: 20 0;

  border: 1px solid black;
  background-color: #00ff00; /* 0 - 9 y A - F*/
}
.tamano {
  height: 400px;
  width: 400px;
  background-color: black;
}
.tamano-hijo {
  height: 50%;
  width: 50%;
  background-color: red;
}
.div-vh-vw {
  height: 100vh;
  width: calc(100vw - 40px);
  background-color: blue;
}
.punto {
  height: 100pt;
  width: 100pt;
  background-color: red;
}
.div-rem {
  /* en relacion al tamaño base de la pagina */
  height: 20rem;
  width: 20rem;
  background-color: red;
}
.div-em {
  height: 20em;
  width: 20em;
  background-color: green;
}
._contenedor {
  background-color: rgb(128, 0, 85);
  width: 500px;
  height: 500px;
}
._contenido {
  background-color: red;
  width: 200px;
  height: 200px;
  max-height: 200px; /*maximo de alto*/
  max-width: 200px; /*maximo de ancho*/
  overflow-y: auto; /* scroll, hidden, auto*/
  overflow-y: hidden;
}
._otrocontenido {
  background-color: blue;
  width: 100px;
  height: 100px;
}
.contenido-grande {
  background-color: yellow;
  width: 1000px;
  height: 1000px;
}
.contenedor-de-bordes > div {
  height: 100px;
  width: 100px;
  border-width: 5px;
  border-style: dotted;
  border-color: green;
  border-color: teal;
  border-radius: 50%;
  margin-top: 20px;
}
.borde-1 {
  border-style: dashed !important;
}
.borde-2 {
  border-style: double !important;
}
.borde-3 {
  border-style: outset !important;
}
.borde-4 {
  border-style: solid !important;
}
.borde-en-una-linea {
  border: 1px solid red;
  border-radius: 50%;
  height: 100px;
  width: 100px;
  margin-top: 20px;
}
/* flex container
afectara no solo a si mismo, tambien afectara lo que contenga
es un sistema de elementos flexibles donde los elementos HTML se adaptan y colocan automaticamente siendo mas facil personalizarlos
1 flex-direction: row | row-reverse | column | column-reverse DEFINE LA DIRECCION DE LOS ELEMENTOS DEL CONTENEDOR
2 flex-wrap: nowrap | wrap | wrap-reverse
DEFINE QUE LOS ELEMENTOS SE AJUSTAN A LA PANTALLA(PUEDAN SALTAR A LA SIGUIENTE COLUMNA, ETC)
3 FLEX-FLOW: COMBINACION DE LAS PROPIEDADES DE FLEX-WRAP Y FLEX-DIRECTION.
4 justify-content: start | end | flex-start | flex-end | center | space-between | space-around
5 align-items: flex-start | flex-end | center | baseline | stretch
5 align-content: flex-start | flex-end | center | space-between | space-around | stretch (PARA ALINEAR LAS FILAS )
*/
.flex-container {
  display: flex; /* Afecta lo que contiene el elemento */
  /* flex-wrap: wrap-reverse;  nowrap, wrap... flex- direction : column, row, row-reverse, column-reverse (wrap se ajusta a la pantalla) */
  /*flex-flow: row wrap;  es una combinacion de las propiedades flex-wrap y flex-direction*/
  /*justify-content: end;
  align-items: baseline;*/
  flex-wrap: wrap;
  align-content: space-around;
  font-size: 30px;
  border: 1px solid black;
  padding: 10px;

  height: 300px;
}
.flex-container > div {
  background-color: rgb(160, 66, 66);
  /*margin: 10px;*/
  padding: 20px;
  font-size: 30px;
  text-align: center;
  width: 100px;
  line-height: 70px;
  height: 70px;
}
.contenedor-perfecto {
  display: flex;
  background-color: rgb(105, 102, 102);
  height: 200px;
  width: 200px;
  justify-content: center;
  align-items: center;
}
.contenido-perfecto {
  display: flex;
  background-color: rgb(65, 230, 0);
  margin: 50px 50px;
  height: 100px;
  width: 100px;
  align-items: center;
  justify-content: center;
}
/* SELECTOR HIJO
COMPORTAMIENTO DE ELEMENTOS HIJOS DENTRO DE CONTENEDORES FLEX
ORDER: ESPECIFICA EL ORDEN DE LOS ELEMENTOS
FLEX-GROW: DETERMINA CUANTO CRECE EL ELEMENTO RELATIVO AL RESTO DE LOS ELEMENTOS EN EL CONTENEDOR FLEX */
.flex-container2 {
  display: flex;
  flex-wrap: wrap;
  align-content: space-around;
  font-size: 30px;
  border: 1px solid black;
  padding: 10px;

  height: 300px;
}
.flex-container2 > div {
  /* margin: 10px; */
  background-color: #007fff;
  padding: 20px;
  width: 100px;
  text-align: center;
  line-height: 70px;
  height: 70px;
}
.flex-container2 > div:nth-child(1) {
  order: 3; /*le cambio el orden*/
  flex-grow: 1;
  background-color: #00ff00;
}
.flex-container2 > div:nth-child(2) {
  order: 1;
  flex-grow: 5;
  background-color: rgb(32, 30, 30);
}
.flex-container2 > div:nth-child(3) {
  order: 2;
  flex-grow: 5;
  background-color: #752c6f;
}
/* FLEX-SHRINK: DETERMINA CUANTO REDUCIRA EL ELEMENTO RELATIVO AL RESTO DE LOS ELEMENTOS EN EL CONTENEDOR FLEX */
.flex-container-3 {
  display: flex;
  background-color: beige;
  align-items: center;
  justify-content: center;
}
.flex-container-3 > div {
  background-color: #007fff;
  color: white;
  margin: 20px;
  width: 100px;
  text-align: center;
  line-height: 70px;
  height: 70px;
  font-size: 30px;
}
.flex-container-3 > div:nth-child(2) {
  flex-shrink: 0.9;
}
/* flex-basic: 
determina una longitud especifica*/
.flex-container-3 > div:nth-child(3) {
  flex-basis: 200px;
}
